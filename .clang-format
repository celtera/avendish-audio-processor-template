BasedOnStyle: WebKit

BraceWrapping:
  AfterClass:      true
  AfterControlStatement: true
  AfterEnum:       true
  AfterExternBlock: false
  AfterFunction:   true
  AfterNamespace:  true
  AfterStruct:     true
  AfterUnion:      true
  BeforeCatch:     true
  BeforeElse:      true
  IndentBraces:    false

AccessModifierOffset: -2
AlignAfterOpenBracket: AlwaysBreak
AlignConsecutiveDeclarations: false
AlignEscapedNewlinesLeft: true
AlignOperands: true
AlignTrailingComments: true
AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: Inline
AllowShortIfStatementsOnASingleLine: false
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterDefinitionReturnType: false
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: true
BinPackArguments: true
BinPackParameters: true
BreakBeforeBinaryOperators: All
BreakBeforeBraces: Custom
BreakBeforeConceptDeclarations: true
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeComma
BreakConstructorInitializersBeforeComma: true
BreakInheritanceList: BeforeComma
ColumnLimit: 89
CommentPragmas: '^ clang-format:'
# ConstructorInitializerAllOnOneLineOrOnePerLine: false
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
DerivePointerAlignment: false
# ExperimentalAutoDetectBinPacking: false
IncludeBlocks: Regroup
IndentCaseLabels: true
IndentExternBlock: NoIndent
IndentWidth: 2
IndentWrappedFunctionNames: false
KeepEmptyLinesAtTheStartOfBlocks: true
LambdaBodyIndentation: OuterScope
Language: Cpp
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
PackConstructorInitializers: Never
PenaltyBreakBeforeFirstCallParameter: 19
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 60
PointerAlignment: Left
ReferenceAlignment: Left
ReflowComments: false
SortIncludes: true
SpaceAfterCStyleCast: false
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeParens: Never
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: false
SpacesInContainerLiterals: true
SpacesInCStyleCastParentheses: false
SpacesInParentheses: false
SpacesInSquareBrackets: false
Standard: Latest
StatementMacros: ['define_get_property', 'type_or_value_qualification', 'type_or_value_reflection', 'type_or_value_accessors', 'E_SIGNAL', 'PROPERTY', 'W_SIGNAL', 'W_PROPERTY', 'W_SLOT', 'halp__enum', 'halp__enum_combobox', 'halp_meta', 'halp_flag', 'halp_flags', 'gpp_attribute', 'gpp_compute', 'halp_lambda', 'halp_free_fun', 'halp_free_fun_t', 'halp_mem_fun', 'halp_mem_fun_t']
TabWidth: 2
UseTab: Never

IncludeCategories:
  - Regex:           '<.*\.(c|cpp)>'
    Priority:        1000
  - Regex:           '^"'
    Priority:        1
  - Regex:           '<([[:alnum:]_]+\/?)+.(h|hpp)>'
    Priority:        5
  - Regex:           '^<common/'
    Priority:        10
  - Regex:           '^<avnd/'
    Priority:        15
  - Regex:           '^<boost'
    Priority:        20
  - Regex:           '^<Q'
    Priority:        25
  - Regex:           '<([[:alnum:]_]+\/)+([[:alnum:]_])+.(h|hpp)>'
    Priority:        70
  - Regex:           '<([[:alnum:]_]+\/?)+.(h|hpp)>'
    Priority:        80
  - Regex:           '<[[:alnum:]_]+>'
    Priority:        900
